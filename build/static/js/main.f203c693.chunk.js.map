{"version":3,"sources":["services/persons.js","components/Notification.js","components/Filter.js","components/PersonForm.js","components/Person.js","components/Persons.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","request","post","console","log","id","put","delete","Notification","notification","type","className","Filter","props","value","filterValue","onChange","filterOnChange","PersonForm","onSubmit","nameValue","nameOnChange","numberValue","numberOnChange","Person","name","number","onClick","deletePerson","Persons","filteredPersons","length","persons","filter","person","toLowerCase","includes","map","i","key","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","notifications","setNotifications","notificationType","setNotificationType","useEffect","personService","initialPersons","event","preventDefault","target","check","find","personObject","undefined","window","confirm","newPersons","setTimeout","catch","error","returnedPerson","concat","updatedPersons","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f203c693.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => {\n    return response.data\n  })\n}\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject)\n  console.log(\"reguest vastaus\", request)\n  return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, remove }","import React from 'react'\n\nconst Notification = ({ notification, type }) => {\n    if (notification===null) {return null}\n    return (\n      <div className={type}>\n        {notification}\n      </div>\n    )\n  }\n\n  export default Notification","import React from 'react'\n\nconst Filter = (props) => {\n    return(\n      <form>\n        <div>\n          filter show with <input value={props.filterValue} onChange={props.filterOnChange}/>\n        </div>\n      </form>\n    )\n}\n\n\nexport default Filter","import React from 'react'\n\nconst PersonForm = (props) => {\n    return (\n      <form onSubmit={props.onSubmit}>\n        <div>name: <input value={props.nameValue} onChange={props.nameOnChange}/></div>\n        <div>number: <input value={props.numberValue} onChange={props.numberOnChange}/></div>\n        <div><button type=\"submit\">add</button></div>\n      </form>\n    )\n}\n\nexport default PersonForm","import React from 'react'\n\nconst Person = (props) => {\n  return (\n    <div>\n      {props.name} {props.number} <button id={props.id} value={props.name}Â onClick={props.deletePerson}>delete</button>\n    </div>\n  )\n}\n\nexport default Person","import React from 'react'\nimport Person from './Person'\n\n\nconst Persons = (props) => {\n    let filteredPersons\n    if (props.filterValue.length > 0) {\n      filteredPersons = props.persons.filter(person => \n        person.name.toLowerCase().includes(props.filterValue.toLowerCase()))\n      return (\n        <div>\n          <ul>\n            {filteredPersons.map((person,i) => \n              <Person key={i} name={person.name} number={person.number} deletePerson={props.deletePerson} id={person.id}/>\n            )}          \n          </ul>\n        </div>\n      )\n    } else {\n      return (      \n        <div>\n          <ul>\n            {props.persons.map((person,i) => \n              <Person key={i} name={person.name} number={person.number} deletePerson={props.deletePerson} id={person.id}/>\n            )}\n          </ul>\n        </div>\n      )    \n    }\n}\n\nexport default Persons","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\nimport Notification from './components/Notification'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\n\n        \nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newFilter, setNewFilter ] = useState('')\n  const [ notifications, setNotifications ] = useState(null)\n  const [ notificationType, setNotificationType] = useState(null)\n  \n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n\n  const addName = (event) => {\n    event.preventDefault()\n\n    var check = persons.find(person => person.name === newName)\n\n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n    \n    \n    if (check!==undefined) {\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n        const id = persons.find(person => person.name === personObject.name).id\n        personService\n          .update(id, personObject)\n          .then(response => {\n            personService\n              .getAll()\n              .then(newPersons => {\n                setPersons(newPersons)\n                setNewName('')\n                setNewNumber('')\n                setNotifications(`${personObject.name} number updated`)\n                setNotificationType('normal')\n                setTimeout(() => {\n                  setNotifications(null)\n                  setNotificationType(null)}, 5000)\n              })\n          }).catch(error => {\n            personService\n            .getAll()\n            .then(newPersons => {setPersons(newPersons)})\n            setNotifications(`Information of ${personObject.name} has already been removed from server`)\n            setNotificationType('error')\n            setTimeout(() => {\n              setNotifications(null)\n              setNotificationType(null)}, 5000)\n          })\n      }\n    } else {\n      personService\n        .create(personObject)\n          .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setNewName('')\n          setNewNumber('')\n          setNotifications(`${personObject.name} added to phonebook`)\n          setNotificationType('normal')\n          setTimeout(() => {\n            setNotifications(null)\n            setNotificationType(null)}, 5000)\n        }).catch(error => {\n          setNotifications(error.response.data.error)\n          setNotificationType('error')\n          setTimeout(() => {\n            setNotifications(null)\n            setNotificationType(null)}, 5000)\n        })\n    }   \n  }\n\n  const handlePersonChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    event.preventDefault()\n    setNewFilter(event.target.value)\n  }\n\n  const deletePerson = (event) => {\n    const name = event.target.value\n    \n    if (window.confirm(`Delete ${name}?`)){\n      personService\n        .remove(event.target.id)\n        .then(response => {\n          personService\n            .getAll()\n            .then(updatedPersons => {\n              setPersons(updatedPersons)\n            })\n            setNotifications(`${name} removed from phonebook`)\n            setNotificationType('normal')\n            setTimeout(() => {\n              setNotifications(null)\n            }, 5000)\n        }).catch(error =>{\n          personService\n          .getAll()\n          .then(updatedPersons => {setPersons(updatedPersons)})\n          setNotifications(`Information of ${name} has already been removed from server`)\n          setNotificationType('error')\n          setTimeout(() => {\n            setNotifications(null)\n            setNotificationType(null)}, 5000)\n        })\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Filter filterValue={newFilter} filterOnChange={handleFilterChange}/>\n      <Notification notification={notifications} type={notificationType} />\n      <h3>Add a new</h3>\n      <PersonForm onSubmit={addName} \n        nameValue={newName} nameOnChange={handlePersonChange} \n        numberValue={newNumber} numberOnChange={handleNumberChange}\n      />\n      <h2>Numbers</h2>\n      <Persons persons={persons} filterValue={newFilter} deletePerson={deletePerson}/>\n    </div>\n  )\n\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}